<project name="Java Cookbook Examples" default="build" basedir=".">

	<!-- Ant buildfile for Java Cookbook examples.
		$Id$
		-->

	<!-- set global properties for this build -->
	<property name="src" value="."/>
	<property name="src-jar" value="javacooksrc2.jar"/>
	<property file="build.properties"/>

	<!-- Right away, make sure javasrc.home has been set
	 (this must be set as an absolute path, alas, so that
	 you can invoke builds from here OR from the relevant subdirs). -->

	<available file="${javasrc.home}/build.xml" 
		type="file" property="javasrc.home.present"/>

	<target name="check" unless="javasrc.home.present">
		<fail>Can not open ${javasrc.home}/build.xml.
		Please check javasrc.home setting in build.properties.</fail>
	</target>

	<!-- List of subdirectories for build and export -->
	<property name="subdirs"
		value="acks applet ChartBean classloader crssetup
		datetime DBM dir_file email environ gc graphics
		gui i18n introspection io
		javacomm.api javacomm javadoc jdb
		JDBC JMS JNDI jndi-services
		jsp jsptags language NETWatch netweb network numbers 
		oo otherlang packaging
		performance Plotter quizzes RE rmi
		seating servlet ShowDocument signals starting strings
		structure tar testing textproc threads tmtimer tools
		webserver wildmat XColor xml xmlform"
		/>
	<property name="optsubdirs"
		value="beans prefs RE-apache"/>

	<property name="local.lib" value="${user.dir}/lib"/>

	<!-- The "foreach" task used to iterate over "subdirs" is part of
	 *** the "ant-contrib" package. If you have that package installed
	 *** you can remove this, but I want this to work for everybody.
	 -->
	<taskdef name="foreach" classname="net.sf.antcontrib.logic.ForEach"
		classpath="${ant-contrib.jar}:${junit.jar}"/>

	<target name="init" depends="check">
		<splash imageurl="file:images/javacook.jpg" showduration="0"/>

		<tstamp/>

		<!-- conditional properties -->
		<available property="avail.prefs" className="java.util.prefs.Preferences"/>

		<available property="avail.BSF" className="org.apache.bsf.BSFManager"/>

		<available property="avail.RE.apache" className="org.apache.regexp.RE"/>

		<condition property="avail.javamail">
			<and>
				<available className="javax.mail.Message"/>
				<available className="javax.activation.Handler"/>
			</and>
		</condition>

		<available property="avail.jmf" 
			classname="javax.media.Controllerlistener" />

		<available property="avail.nio" className="java.nio.Buffer"/>

		<available property="avail.imageio.1.4" 
			className="java.awt.image.ColorModel"/>

		<available property="avail.jdom" className="org.jdom.Document"/>
		
		<available property="avail.javacomm" 	
			className="javax.comm.CommPortOpen"/>

		<available property="avail.pdflib" className="com.pdflib.Document"/>
		
	</target>

	<!-- compile APIs needed by other parts of the file -->
	<target name="api" depends="init">
		<echo message="==> darwinsys"/>
		<ant target="jar" dir="darwinsys" inheritAll="false"/>
		<echo message="==> spdf"/>
		<ant target="jar" dir="spdf"/>
	</target>

	<!-- compile everything, for JavaCookbook reliability :-) -->
	<target name="build" description="compile all" depends="api">
		<foreach list="${subdirs}" 
			delimiter=" " target="build.sub" param="dir"/>
	</target>

	<target name="build.sub" description="nested build">
		<ant dir="${dir}"/>
	</target>

	<!-- optional targets -->
	<target name="build.optional" depends="beans,prefs,RE.apache"/>

	<target name="beans" if="avail.BSF">
		<ant dir="beans"/>
	</target>

	<target name="prefs" if="avail.prefs">
		<ant dir="prefs"/>
	</target>

	<target name="RE.apache" if="avail.RE.apache">
		<ant dir="RE-apache"/>
	</target>

	<target name="jar">
		<!-- To be sure it's correct, the distro is built
		 ** by re-getting everything from CVS, building the API, etc.
		 ** Hence the separate Ant file.
		 -->
		<ant antfile="build-export-src.xml"/>
	</target>

	<!-- Kludge to make up a Jar from the working directory -->
	<!-- Can do this using jar task if we convert subdirs to a PATH? -->
	<target name="interim">
		<echo file="mkinterim">
#!/bin/sh
rm *.class */*.class
cd ..
set -x
jar cvf ./javasrc/javacooksrc2.jar \
		./javasrc/Readme-Interim.txt \
		./javasrc/build-export-src.properties \
		./javasrc/build-export-src.xml \
		./javasrc/build.properties 	\
		./javasrc/build.xml         \
		./javasrc/about.html		\
		./javasrc/images            \
		./javasrc/index-bychapter.html \
		./javasrc/index.html		\
		./javasrc/jabadex.html		\
		./javasrc/jabadot.html		\
		./javasrc/darwinsys		\
		./javasrc/spdf			    \
		./javasrc/lib				\
		</echo>
		<foreach list="${subdirs} ${optsubdirs}" 
			delimiter=" " target="interim.append" param="dir"/>
		<chmod file="mkinterim" perm="ugo+rx"/>
		<exec executable="mkinterim"/>
	</target>
	<target name="interim.append">
		<echo file="mkinterim" append="true" message="./javasrc/${dir} "/>
	</target>

	<!-- clean up -->
	<!--
	<target name='clean'>
		<delete dir="${build}"/>
	</target>
	-->
</project>
